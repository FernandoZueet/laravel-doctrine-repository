<?php

/**
 * {{nameEntity}} repository interface.
 *
 * Code generated by cli command.
 *
 * @see http://github.com/fernandozueet/laravel-doctrine-repository
 *
 * @copyright 2018
 */

namespace App\{{namespace}};

interface {{nameEntity}}RepositoryInterface
{
    /*-------------------------------------------------------------------------------------
    * OTHERS
    *-------------------------------------------------------------------------------------*/

    //Others here
    //

    public function whereIdEq(int $value);

    public function orderId(string $value = 'DESC');

    public function groupById();

    public function havingIdEq(int $value);

    /*-------------------------------------------------------------------------------------
    * GENERAL
    *-------------------------------------------------------------------------------------*/

    public function create(array $params): object;

    public function update(array $params, int $id): object;

    public function updateQuery(array $params): int;

    public function selectAll();

    public function setTransaction($conn);

    public function beginTransaction();

    public function commitTransaction();

    public function rollBackTransaction();

    public function find(int $id, string $typeTreat = '', array $treatObject = []): object;

    public function createQuery();

    public function setQuery($query);

    public function getQuery();

    public function readQuery(string $typeTreat = '', array $treatObject = []): object;

    public function paginator(int $firstResult, int $limit);

    public function setMaxResults(int $limit);

    public function orderByRand();

    public function setWhere($param);

    public function setAndWhere($param);

    public function setOrWhere($param);

    public function setCondOrWhere();

    public function setCondAndWhere();

    public function setCondNotWhere();

    public function setParentStartWhere();

    public function setParentEndWhere();

    public function whereExpr($function);

    public function setHaving($param);

    public function setAndHaving($param);

    public function setOrHaving($param);

    public function setCondOrHaving();

    public function setCondAndHaving();

    public function setCondNotHaving();

    public function setParentStartHaving();

    public function setParentEndHaving();

    public function havingExpr($function);

    public function deleteQuery(): bool;
}